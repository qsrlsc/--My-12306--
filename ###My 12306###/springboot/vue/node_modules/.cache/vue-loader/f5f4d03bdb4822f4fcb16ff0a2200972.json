{"remainingRequest":"D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\springboot+vue框架\\My12306\\springboot\\vue\\src\\views\\DetailOrder.vue?vue&type=template&id=7905ca9a&scoped=true&","dependencies":[{"path":"D:\\springboot+vue框架\\My12306\\springboot\\vue\\src\\views\\DetailOrder.vue","mtime":1661056113292},{"path":"D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\springboot+vue框架\\My12306\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}